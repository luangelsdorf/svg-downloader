import Head from 'next/head';
import { Inter } from 'next/font/google';
import { Button, Col, Container, Form, Row } from 'react-bootstrap';
import { useState } from 'react';

const inter = Inter({ subsets: ['latin'] });

export default function Home() {
  const [preview, setPreview] = useState('');
  const [download, setDownload] = useState(false);

  async function handleSubmit(e) {
    e.preventDefault();
    let [variant, icon] = e.target.elements;

    let res = await fetch(`https://site-assets.fontawesome.com/releases/v6.4.0/svgs/${variant.value}/${icon.value}.svg`);

    if (!res.ok) {
      setPreview(`Erro`);
      setDownload(false);
      return
    }

    let svgContent = await res.text();
    let blob = new Blob([svgContent], { type: 'image/svg+xml' });
    let blobURL = window.URL.createObjectURL(blob);
    setPreview(svgContent);
    setDownload({ url: blobURL, filename: `${icon.value}-${variant.value}.svg` });
  }

  const variants = ['Solid', 'Regular', 'Light', 'Thin', 'Duotone'];

  return (
    <>
      <Head>
        <title>SVG Downloader</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <style jsx global>{`
        svg {
          fill: white;
          height: 100%;
        }
      `}</style>

      <main className={`${inter.className} mt-4`}>

        <Container>
          <Row className="justify-content-center">
            <Col xs="8" lg="6">
              <Form onSubmit={handleSubmit} className="my-5">
                <Form.Label>Variante</Form.Label>
                <Form.Group className="mb-3">
                  <Form.Select required>
                    {
                      variants.map((variant, index) => (
                        <option value={variant.toLowerCase()} key={index}>{variant}</option>
                      ))
                    }
                  </Form.Select>
                </Form.Group>

                <Form.Group className="mb-3">
                  <Form.Label>Ícone</Form.Label>
                  <Form.Control required type="text" placeholder="Ícone" />
                </Form.Group>

                <Button variant="primary" type="submit">
                  Enviar
                </Button>
              </Form>

              <Row className="justify-content-between">
                <Col className="h-100" md="10" lg="8" xl="5">
                  <div className="mb-4">
                    <h1>Preview:</h1>
                    {
                      preview ? (
                        <div style={{ height: '200px' }} dangerouslySetInnerHTML={{ __html: preview }} />
                      ) : (
                        <div className="text-danger">Nenhum ícone</div>
                      )
                    }
                  </div>
                  {download.url && <Button href={download.url} download={download.filename} variant="success">Download</Button>}
                </Col>
                <Col className="h-100" md="10" lg="8" xl="5">
                  <div className="mb-4">
                    <h1>Código:</h1>
                    {
                      preview ? (
                        <code style={{ display: 'block', height: '200px', overflow: 'hidden scroll' }}>{preview}</code>
                      ) : (
                        <div className="text-danger">Nenhum ícone</div>
                      )
                    }
                  </div>
                  {
                    download.url && (
                      <Button onClick={() => navigator.clipboard.writeText(preview)} variant="success">Copiar</Button>
                    )
                  }
                </Col>
              </Row>
            </Col>
          </Row>
        </Container>
      </main>
    </>
  )
}
